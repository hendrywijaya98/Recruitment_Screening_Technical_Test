USE Advance_SQL_Practice;

--DROP TABLE Commerce_Sales_Dataset;

SELECT * FROM Commerce_Sales_Dataset;

-- Data Cleaning, Correcting Mismatch Data Type
SELECT timestamp_purchase,CONVERT(datetime, timestamp_purchase, 103) AS purchase_time FROM Commerce_Sales_Dataset;
-- SELECT CONVERT(INT, CONVERT(VARCHAR, REPLACE(harga, ',',''))) AS harga,
--	   CONVERT(INT, CONVERT(VARCHAR, REPLACE(total_harga, ',',''))) AS total_harga FROM Commerce_Sales_Dataset;

DECLARE @timestamp_purchase nvarchar(20)

SET @timestamp_purchase = '21-12-2003 15:22:15'

SELECT CONVERT(datetime,@timestamp_purchase,103)

UPDATE Commerce_Sales_Dataset SET timestamp_purchase = CONVERT(VARCHAR, timestamp_purchase, 120)
ALTER TABLE Commerce_Sales_Dataset ALTER COLUMN timestamp_purchase DATETIME

UPDATE Commerce_Sales_Dataset SET harga=CONVERT(INT, CONVERT(VARCHAR, REPLACE(harga, ',','')))
UPDATE Commerce_Sales_Dataset SET total_harga=CONVERT(INT, CONVERT(VARCHAR, REPLACE(total_harga, ',','')))
ALTER TABLE Commerce_Sales_Dataset ALTER COLUMN harga BIGINT
ALTER TABLE Commerce_Sales_Dataset ALTER COLUMN total_harga BIGINT

EXEC sp_columns Commerce_Sales_dataset;

SELECT 'id' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE id IS NULL
UNION
SELECT 'timestamp_purchase' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE timestamp_purchase IS NULL
UNION
SELECT 'user_id' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE user_id IS NULL
UNION
SELECT 'SKU' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE SKU IS NULL
UNION
SELECT 'kategori' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE kategori IS NULL
UNION
SELECT 'jumlah' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE jumlah IS NULL
UNION
SELECT 'harga' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE harga IS NULL
UNION
SELECT 'total_harga' AS column_name, COUNT(*) AS null_count FROM Commerce_Sales_Dataset 
WHERE total_harga IS NULL

-- Null Value Replacement on harga column
UPDATE Commerce_Sales_Dataset SET harga=0 WHERE harga IS NULL;

-- Jumlah pembeli
SELECT COUNT(DISTINCT user_id) FROM Commerce_Sales_Dataset;

-- ========================= ANALYTICAL QUESTION BASED EXPLANATORY  ========================= 
SELECT count(DISTINCT user_id) total_customers, AVG(total_harga) as avg_revenue
FROM Commerce_Sales_Dataset;

-- rata-rata Pemasukan yang diperoleh dari Tiap Pembeli
SELECT SUM(total_harga)/ count(DISTINCT user_id) as avg_user_value FROM Commerce_Sales_Dataset

SELECT user_id, AVG(total_harga) as avg_transaction FROM Commerce_Sales_Dataset 
GROUP BY user_id ORDER BY avg_transaction DESC

-- median Pemasukan yang diperoleh dari Tiap Pembeli
SELECT ROUND(MAX(median_value)/ count(DISTINCT user_id),2) AS median_user_value FROM
(SELECT user_id, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_harga DESC) 
        OVER (PARTITION BY user_id) AS median_value FROM Commerce_Sales_Dataset) as med_table

SELECT TOP 15 user_id, MAX(median_value) AS median_transaction FROM
(SELECT user_id, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_harga DESC) 
        OVER (PARTITION BY user_id) AS median_value FROM Commerce_Sales_Dataset) as med_table
GROUP BY user_id ORDER BY median_transaction DESC

-- Monthly Total Revenue of a year
SELECT SUBSTRING(timestamp_purchase,0,5) AS year_sales, 
		CASE WHEN SUBSTRING(timestamp_purchase,6,2) = '01' THEN 'January'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '02' THEN 'February'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '03' THEN 'March'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '04' THEN 'April'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '05' THEN 'May'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '06' THEN 'June'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '07' THEN 'July'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '08' THEN 'August'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '09' THEN 'September'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '10' THEN 'October'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '11' THEN 'November'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '12' THEN 'December'
			 ELSE 'OTHER'
        END AS month_sales, SUM(total_harga) as total_revenue
FROM Commerce_Sales_Dataset GROUP BY SUBSTRING(timestamp_purchase,0,5),SUBSTRING(timestamp_purchase,6,2)

-- Highest Revenue generated by Product Category from each Month
SELECT CASE WHEN SUBSTRING(timestamp_purchase,6,2) = '01' THEN 'January'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '02' THEN 'February'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '03' THEN 'March'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '04' THEN 'April'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '05' THEN 'May'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '06' THEN 'June'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '07' THEN 'July'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '08' THEN 'August'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '09' THEN 'September'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '10' THEN 'October'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '11' THEN 'November'
			 WHEN SUBSTRING(timestamp_purchase,6,2) = '12' THEN 'December' ELSE 'OTHER'
        END AS month_sales, kategori, SUM(jumlah) AS total_penjualan, SUM(total_harga) AS total_pendapatan
FROM Commerce_Sales_Dataset GROUP BY kategori,SUBSTRING(timestamp_purchase,6,2) 
ORDER BY SUBSTRING(timestamp_purchase,6,2),total_pendapatan DESC

-- Highest product sales and revenue by category
SELECT kategori, COUNT(SKU) as sku_num, SUM(jumlah) AS total_penjualan, SUM(total_harga) as total_pendapatan 
FROM Commerce_Sales_Dataset GROUP BY kategori ORDER BY total_pendapatan DESC;

-- Top Brand Sales and Revenue
WITH final_table AS
(SELECT *,CASE WHEN LOWER(SKU) LIKE '%bardi%' THEN 'BARDI'
				 WHEN LOWER(SKU) LIKE '%barbie%' THEN 'BARBIE'
				 WHEN LOWER(SKU) LIKE '%gundam%' THEN 'BANDAI'
				 WHEN LOWER(SKU) LIKE '%hot wheels%' THEN 'HOT WHEELS'
				 WHEN LOWER(SKU) LIKE '%yoyo%' THEN 'YOYOS'
				 WHEN LOWER(SKU) LIKE '%huawei%' THEN 'HUAWEI'
				 WHEN LOWER(SKU) LIKE '%asus%' THEN 'ASUS'
				 WHEN LOWER(SKU) LIKE '%nitendo%' OR LOWER(SKU) LIKE '%nintendo%' THEN 'NINTENDO'
				 WHEN LOWER(SKU) LIKE '%ps%' THEN 'SONY'
				 WHEN LOWER(SKU) LIKE '%iphone%' OR LOWER(SKU) LIKE '%macbook%' THEN 'APPLE'
				 WHEN LOWER(SKU) LIKE '%xiaomi%' THEN 'XIAOMI'
				 WHEN LOWER(SKU) LIKE '%galaxy%' THEN 'SAMSUNG'
				 WHEN LOWER(SKU) LIKE '%hp%' THEN 'HP'
			ELSE 'Unknown' END as brand FROM Commerce_Sales_Dataset) 
SELECT brand, SUM(jumlah) as total_penjualan , SUM(total_harga) as total_pendapatan 
FROM final_table WHERE NOT brand = 'Unknown' GROUP BY Brand ORDER BY total_pendapatan DESC

WITH final_table AS
(SELECT *,CASE WHEN LOWER(SKU) LIKE '%bardi%' THEN 'BARDI'
				 WHEN LOWER(SKU) LIKE '%barbie%' THEN 'BARBIE'
				 WHEN LOWER(SKU) LIKE '%gundam%' THEN 'BANDAI'
				 WHEN LOWER(SKU) LIKE '%hot wheels%' THEN 'HOT WHEELS'
				 WHEN LOWER(SKU) LIKE '%yoyo%' THEN 'YOYOS'
				 WHEN LOWER(SKU) LIKE '%huawei%' THEN 'HUAWEI'
				 WHEN LOWER(SKU) LIKE '%asus%' THEN 'ASUS'
				 WHEN LOWER(SKU) LIKE '%nitendo%' OR LOWER(SKU) LIKE '%nintendo%' THEN 'NINTENDO'
				 WHEN LOWER(SKU) LIKE '%ps%' THEN 'SONY'
				 WHEN LOWER(SKU) LIKE '%iphone%' OR LOWER(SKU) LIKE '%macbook%' THEN 'APPLE'
				 WHEN LOWER(SKU) LIKE '%xiaomi%' THEN 'XIAOMI'
				 WHEN LOWER(SKU) LIKE '%galaxy%' THEN 'SAMSUNG'
				 WHEN LOWER(SKU) LIKE '%hp%' THEN 'HP'
			ELSE 'Unknown' END as brand FROM Commerce_Sales_Dataset) 
SELECT SUM(jumlah) AS total_produk FROM final_table WHERE NOT brand = 'Unknown'

-- Customer Presence and Traffic IN Hourly
SELECT SUBSTRING(timestamp_purchase,12,2) AS hour, COUNT(DISTINCT user_id) AS customer_presence 
FROM Commerce_Sales_Dataset GROUP BY SUBSTRING(timestamp_purchase,12,2)

-- ========================= EXPLANATORY FOR VISUALIZATION =========================  
-- ==================== CUSTOMER VALUE ANALYSIS ==================== 
-- Jumlah, rata-rata dan median Pemasukan yang diperoleh dari Tiap Pembeli
SELECT sum_rev.*, avg_rev.avg_price, med_rev.median_revenue FROM 
(SELECT user_id, SUM(total_harga) as total_revenue FROM Commerce_Sales_Dataset GROUP BY user_id) as sum_rev
JOIN 
(SELECT user_id, AVG(total_harga) as avg_price FROM Commerce_Sales_Dataset 
GROUP BY user_id) as avg_rev 
ON sum_rev.user_id = avg_rev.user_id
JOIN 
(SELECT user_id, MAX(median_value) AS median_revenue FROM
(SELECT user_id, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_harga DESC) 
        OVER (PARTITION BY user_id) AS median_value FROM Commerce_Sales_Dataset) as med_table
GROUP BY user_id) 
as med_rev ON sum_rev.user_id = med_rev.user_id

-- ==================== CUSTOMER BEHAVIOUR ANALYSIS ==================== 
-- Produk favorit pembeli berdasarkan kategori
SELECT user_id, kategori, SUM(jumlah) as jumlah_kategori FROM Commerce_Sales_Dataset 
GROUP BY user_id, kategori ORDER BY jumlah_kategori DESC;

-- Produk favorit customer
SELECT user_id, SKU, SUM(jumlah) as jumlah_sku FROM Commerce_Sales_Dataset 
GROUP BY user_id, SKU ORDER BY jumlah_SKU DESC;

-- ==================== PRODUCT ANALYSIS ==================== 
-- Kategori Produk Terlaris per jumlah pembeli dan pemasukan
SELECT kategori, COUNT(user_id) as pembeli, AVG(total_harga) AS avg_revenue 
FROM Commerce_Sales_Dataset GROUP BY kategori ORDER BY avg_revenue DESC; 

-- Produk Terlaris per jumlah pembeli dan pemasukan
SELECT SKU, COUNT(user_id) as pembeli, AVG(total_harga) AS avg_revenue 
FROM Commerce_Sales_Dataset GROUP BY SKU ORDER BY avg_revenue DESC;